"use strict";

/**
 * JS控件
 */
class JSControl extends ObjectFactory {
  /**
   * 构造函数
   * @param tag 标签
   */
  constructor(tag) {
    ////////////////////////////////////////////////////////////////////////////
    // 父类构造函数。
    ////////////////////////////////////////////////////////////////////////////
    super();
    ////////////////////////////////////////////////////////////////////////////
    // 标签。
    ////////////////////////////////////////////////////////////////////////////
    this.tag = tag;
    ////////////////////////////////////////////////////////////////////////////
    // 单标签，类似：<img />。
    ////////////////////////////////////////////////////////////////////////////
    this.singleTag = this.checkSingleTag(this.tag);
  }

  /**
   * 检查是否为单标签
   * @param tag: 标签
   * return 单标签返回true;如果不是返回false;
   */
  checkSingleTag(tag) {
    const singleTags = ["base", "basefont", "br", "col", "embed", "frame", "hr", "img", "input", "keygen", "param", "source", "track"];
    for (let i = 0; i < singleTags.length; i++) {
      if (Toolkit.stringEqualsIgnoreCase(tag, singleTags[i])) {
        return true;
      }
    }
    return false;
  }

  /**
   * 生成代码
   */
  generateCode() {
    ////////////////////////////////////////////////////////////////////////////
    // 属性代码。
    ////////////////////////////////////////////////////////////////////////////
    let attributeCode = "";
    Toolkit.eachJSONObjectKV(this.objectAttribute, function(key, value) {
      attributeCode += ` ${key} = "${value}"`;
    });
    if (this.singleTag) {
      //////////////////////////////////////////////////////////////////////////
      // 单标签。
      //////////////////////////////////////////////////////////////////////////
      this.objectCode = `<${this.tag} id = ${this.objectId} ${attributeCode} />`;
    } else {
      //////////////////////////////////////////////////////////////////////////
      // 双标签。
      //////////////////////////////////////////////////////////////////////////
      this.objectCode = `<${this.tag} id = ${this.objectId} ${attributeCode}>${this.objectContent}</${this.tag}>`;
    }
  }
}
