"use strict";

class Prompt extends ObjectFactory {
  /**
   * 构造函数
   */
  constructor() {
    ////////////////////////////////////////////////////////////////////////////
    // 父类构造函数。
    ////////////////////////////////////////////////////////////////////////////
    super();
    ////////////////////////////////////////////////////////////////////////////
    // 提示淡出的时间。
    ////////////////////////////////////////////////////////////////////////////
    this.promptFadeOutTime = 500;
  }

  /**
   * 生成代码
   */
  generateCode() {
    ////////////////////////////////////////////////////////////////////////////
    // 属性代码。
    ////////////////////////////////////////////////////////////////////////////
    let attributeCode = "";
    Toolkit.eachJSONObjectKV(this.objectAttribute, function(key, value) {
      attributeCode += `${key} = "${value}"`;
    });
    this.objectCode = `
      <table id = "${this.objectId}" ${attributeCode}></table>
    `;
  }

  /**
   * 显示
   * @param type 类型（包括：success、error）
   * @param content 内容
   * @param duration 延迟时间（如果为-1则永不消失）
   */
  show(type, content, duration) {
    ////////////////////////////////////////////////////////////////////////////
    // 本地资源。
    ////////////////////////////////////////////////////////////////////////////
    const thisObj = this;
    ////////////////////////////////////////////////////////////////////////////
    // 中断计时、中断动画、隐藏提示。
    ////////////////////////////////////////////////////////////////////////////
    if (undefined != this.promptHandle) {
      clearTimeout(this.promptHandle);
    }
    this.getObject().stop(true, true);
    this.getObject().css("display", "none");
    ////////////////////////////////////////////////////////////////////////////
    // 设置内容。
    ////////////////////////////////////////////////////////////////////////////
    this.getObject().html(`<tbody><tr><td>${content}</td></tr></tbody>`);
    ////////////////////////////////////////////////////////////////////////////
    // 设置class。
    ////////////////////////////////////////////////////////////////////////////
    this.getObject().removeClass("global_prompt_success global_prompt_error");
    if (Toolkit.stringEqualsIgnoreCase("success", type)) {
      this.getObject().addClass("global_prompt_success");
    } else {
      this.getObject().addClass("global_prompt_error");
    }
    ////////////////////////////////////////////////////////////////////////////
    // 显示提示。
    ////////////////////////////////////////////////////////////////////////////
    this.getObject().css("display", "table");
    ////////////////////////////////////////////////////////////////////////////
    // 隐藏提示。
    ////////////////////////////////////////////////////////////////////////////
    if (-1 != duration) {
      this.promptHandle = setTimeout(function() {
        thisObj.getObject().fadeOut(thisObj.promptFadeOutTime);
      }, duration);
    }
  }

  /**
   * 隐藏
   */
  hide() {
    ////////////////////////////////////////////////////////////////////////////
    // 中断计时、中断动画、隐藏提示。
    ////////////////////////////////////////////////////////////////////////////
    if (undefined != this.promptHandle) {
      clearTimeout(this.promptHandle);
    }
    this.getObject().stop(true, true);
    ////////////////////////////////////////////////////////////////////////////
    // 隐藏提示。
    ////////////////////////////////////////////////////////////////////////////
    this.getObject().fadeOut(this.promptFadeOutTime);
  }
}
