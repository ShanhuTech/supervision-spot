"use strict";

class WarnAM {
  /**
   * 构造函数
   *
   * @param source 调用源
   * @param windowTitle 窗口标题
   * @param windowWidth 窗口宽度
   */
  constructor(source, windowTitle, windowWidth) {
    ////////////////////////////////////////////////////////////////////////////
    // 调用源。
    ////////////////////////////////////////////////////////////////////////////
    this.source = source;
    ////////////////////////////////////////////////////////////////////////////
    // 赋值窗口标题。
    ////////////////////////////////////////////////////////////////////////////
    this.windowTitle = windowTitle;
    ////////////////////////////////////////////////////////////////////////////
    // 赋值窗口宽度。
    ////////////////////////////////////////////////////////////////////////////
    this.windowWidth = windowWidth;
    ////////////////////////////////////////////////////////////////////////////
    // 窗口class标记。
    ////////////////////////////////////////////////////////////////////////////
    this.windowClassSign = "";
    ////////////////////////////////////////////////////////////////////////////
    // 队列。
    ////////////////////////////////////////////////////////////////////////////
    this.queue = new Queue();
  }

  /**
   * 设置窗口class标记
   */
  setClassSign(classSign) {
    this.windowClassSign = classSign;
  }

  /**
   * 生成代码
   */
  generateCode() {
    ////////////////////////////////////////////////////////////////////////////
    // uuid标签。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // uuid输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 一级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelOneLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 一级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelOneSelect = new JSControl("select");
    ////////////////////////////////////////////////////////////////////////////
    // 二级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 二级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoSelect = new JSControl("select");
    ////////////////////////////////////////////////////////////////////////////
    // 三级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelThreeLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 三级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelThreeSelect = new JSControl("select");
    ////////////////////////////////////////////////////////////////////////////
    // 四级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelFourLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 四级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelFourSelect = new JSControl("select");
    ////////////////////////////////////////////////////////////////////////////
    // 名称标签。
    ////////////////////////////////////////////////////////////////////////////
    this.nameLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 名称输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 灵敏度标签。
    ////////////////////////////////////////////////////////////////////////////
    this.confidenceLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 灵敏度输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.confidenceTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 合并间隔标签。
    ////////////////////////////////////////////////////////////////////////////
    this.intervalLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 合并间隔输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.intervalTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 预警容忍时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.warnToleranceLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 预警容忍时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.warnToleranceTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 问题容忍时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.problemToleranceLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 问题容忍时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.problemToleranceTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 观察时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.observationLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 观察时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.observationTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 假期状态标签。
    ////////////////////////////////////////////////////////////////////////////
    this.holidayStatusLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 假期状态下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.holidayStatusSelect = new JSControl("select");
    ////////////////////////////////////////////////////////////////////////////
    // 时间范围标签。
    ////////////////////////////////////////////////////////////////////////////
    this.timeRangeLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 时间范围输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.timeRangeTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 状态标签。
    ////////////////////////////////////////////////////////////////////////////
    this.statusLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 状态下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.statusSelect = new JSControl("select");
    ////////////////////////////////////////////////////////////////////////////
    // 表单列表。
    ////////////////////////////////////////////////////////////////////////////
    this.formList = new FormList();
    ////////////////////////////////////////////////////////////////////////////
    // 弹窗。
    ////////////////////////////////////////////////////////////////////////////
    this.popupWindow = new PopupWindow(this, this.windowTitle, this.windowWidth, this.popupWindowHideCallback);
    ////////////////////////////////////////////////////////////////////////////
    // uuid标签。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.uuidLabel.setContent("uuid");
    ////////////////////////////////////////////////////////////////////////////
    // uuid输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "style": "width: -webkit-fill-available;",
        "disabled": "disabled"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 一级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelOneLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.levelOneLabel.setContent("一级分类");
    ////////////////////////////////////////////////////////////////////////////
    // 一级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelOneSelect.setAttribute(
      {
        "disabled": "disabled",
        "class": "global_select",
        "style": "width: 100%;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 二级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.levelTwoLabel.setContent("二级分类");
    ////////////////////////////////////////////////////////////////////////////
    // 二级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoSelect.setAttribute(
      {
        "disabled": "disabled",
        "class": "global_select",
        "style": "width: 100%;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 三级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelThreeLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.levelThreeLabel.setContent("三级分类");
    ////////////////////////////////////////////////////////////////////////////
    // 三级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelThreeSelect.setAttribute(
      {
        "disabled": "disabled",
        "class": "global_select",
        "style": "width: 100%;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 四级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelFourLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.levelFourLabel.setContent("四级分类");
    ////////////////////////////////////////////////////////////////////////////
    // 四级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelFourSelect.setAttribute(
      {
        "disabled": "disabled",
        "class": "global_select",
        "style": "width: 100%;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 名称标签。
    ////////////////////////////////////////////////////////////////////////////
    this.nameLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.nameLabel.setContent("名称");
    ////////////////////////////////////////////////////////////////////////////
    // 名称输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "name").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 灵敏度标签。
    ////////////////////////////////////////////////////////////////////////////
    this.confidenceLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.confidenceLabel.setContent("灵敏度");
    ////////////////////////////////////////////////////////////////////////////
    // 灵敏度输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.confidenceTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "confidence").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 合并间隔标签。
    ////////////////////////////////////////////////////////////////////////////
    this.intervalLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.intervalLabel.setContent("合并间隔（分）");
    ////////////////////////////////////////////////////////////////////////////
    // 合并间隔输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.intervalTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "interval").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 预警容忍时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.warnToleranceLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.warnToleranceLabel.setContent("预警容忍时间（分）");
    ////////////////////////////////////////////////////////////////////////////
    // 预警容忍时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.warnToleranceTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "warn_tolerance").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 问题容忍时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.problemToleranceLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.problemToleranceLabel.setContent("问题容忍时间（分）");
    ////////////////////////////////////////////////////////////////////////////
    // 问题容忍时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.problemToleranceTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "problem_tolerance").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 观察时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.observationLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.observationLabel.setContent("观察时间（分）");
    ////////////////////////////////////////////////////////////////////////////
    // 观察时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.observationTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "observation").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 假期状态标签。
    ////////////////////////////////////////////////////////////////////////////
    this.holidayStatusLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.holidayStatusLabel.setContent("假期状态");
    ////////////////////////////////////////////////////////////////////////////
    // 假期状态下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.holidayStatusSelect.setAttribute(
      {
        "class": "global_select",
        "style": "width: 100%;"
      }
    );
    this.holidayStatusSelect.setContent(`
      <option value = "ENABLE">启用</option>
      <option value = "DISABLE">禁用</option>
    `);
    ////////////////////////////////////////////////////////////////////////////
    // 时间范围标签。
    ////////////////////////////////////////////////////////////////////////////
    this.timeRangeLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.timeRangeLabel.setContent("时间范围");
    ////////////////////////////////////////////////////////////////////////////
    // 时间范围输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.timeRangeTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": Module.getMethodParameterRuleObj(this.source.warnRule, "addWarn", "time_range").format_prompt,
        "style": "width: -webkit-fill-available;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 状态标签。
    ////////////////////////////////////////////////////////////////////////////
    this.statusLabel.setAttribute(
      {
        "class": "global_label"
      }
    );
    this.statusLabel.setContent("状态");
    ////////////////////////////////////////////////////////////////////////////
    // 状态下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.statusSelect.setAttribute(
      {
        "class": "global_select",
        "style": "width: 100%;"
      }
    );
    this.statusSelect.setContent(`
      <option value = "ENABLE">启用</option>
      <option value = "DISABLE">禁用</option>
    `);
    ////////////////////////////////////////////////////////////////////////////
    // 表单列表。
    ////////////////////////////////////////////////////////////////////////////
    this.formList.setAttribute(
      {
        "class": "global_form_list"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 弹窗。
    ////////////////////////////////////////////////////////////////////////////
    this.popupWindow.setAttribute(
      {
        "class": `global_popup_window ${this.windowClassSign}`,
        "style": "display: none;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // uuid标签。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // uuid输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 一级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelOneLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 一级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelOneSelect.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 二级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 二级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoSelect.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 三级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelThreeLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 三级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelThreeSelect.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 四级标签。
    ////////////////////////////////////////////////////////////////////////////
    this.levelFourLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 四级下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.levelFourSelect.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 名称标签。
    ////////////////////////////////////////////////////////////////////////////
    this.nameLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 名称输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 灵敏度标签。
    ////////////////////////////////////////////////////////////////////////////
    this.confidenceLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 灵敏度输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.confidenceTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 合并间隔标签。
    ////////////////////////////////////////////////////////////////////////////
    this.intervalLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 合并间隔输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.intervalTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 预警容忍时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.warnToleranceLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 预警容忍时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.warnToleranceTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 问题容忍时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.problemToleranceLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 问题容忍时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.problemToleranceTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 观察时间标签。
    ////////////////////////////////////////////////////////////////////////////
    this.observationLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 观察时间输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.observationTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 假期状态标签。
    ////////////////////////////////////////////////////////////////////////////
    this.holidayStatusLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 假期状态输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.holidayStatusSelect.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 时间范围标签。
    ////////////////////////////////////////////////////////////////////////////
    this.timeRangeLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 时间范围输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.timeRangeTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 状态标签。
    ////////////////////////////////////////////////////////////////////////////
    this.statusLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 状态下拉框。
    ////////////////////////////////////////////////////////////////////////////
    this.statusSelect.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 表单列表。
    ////////////////////////////////////////////////////////////////////////////
    const list = new Array();
    list.push({"attr": {"style": "display: none;"}, "required": false, "label_code": `${this.uuidLabel.getCode()}`, "control_id": `${this.uuidTextField.getId()}`, "control_code": `${this.uuidTextField.getCode()}`});
    list.push({"attr": {}, "required": false, "label_code": `${this.levelOneLabel.getCode()}`, "control_id": `${this.levelOneSelect.getId()}`, "control_code": `${this.levelOneSelect.getCode()}`});
    list.push({"attr": {}, "required": false, "label_code": `${this.levelTwoLabel.getCode()}`, "control_id": `${this.levelTwoSelect.getId()}`, "control_code": `${this.levelTwoSelect.getCode()}`});
    list.push({"attr": {}, "required": false, "label_code": `${this.levelThreeLabel.getCode()}`, "control_id": `${this.levelThreeSelect.getId()}`, "control_code": `${this.levelThreeSelect.getCode()}`});
    list.push({"attr": {}, "required": false, "label_code": `${this.levelFourLabel.getCode()}`, "control_id": `${this.levelFourSelect.getId()}`, "control_code": `${this.levelFourSelect.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.nameLabel.getCode()}`, "control_id": `${this.nameTextField.getId()}`, "control_code": `${this.nameTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.confidenceLabel.getCode()}`, "control_id": `${this.confidenceTextField.getId()}`, "control_code": `${this.confidenceTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.intervalLabel.getCode()}`, "control_id": `${this.intervalTextField.getId()}`, "control_code": `${this.intervalTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.warnToleranceLabel.getCode()}`, "control_id": `${this.warnToleranceTextField.getId()}`, "control_code": `${this.warnToleranceTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.problemToleranceLabel.getCode()}`, "control_id": `${this.problemToleranceTextField.getId()}`, "control_code": `${this.problemToleranceTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.observationLabel.getCode()}`, "control_id": `${this.observationTextField.getId()}`, "control_code": `${this.observationTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.holidayStatusLabel.getCode()}`, "control_id": `${this.holidayStatusSelect.getId()}`, "control_code": `${this.holidayStatusSelect.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.timeRangeLabel.getCode()}`, "control_id": `${this.timeRangeTextField.getId()}`, "control_code": `${this.timeRangeTextField.getCode()}`});
    list.push({"attr": {}, "required": true, "label_code": `${this.statusLabel.getCode()}`, "control_id": `${this.statusSelect.getId()}`, "control_code": `${this.statusSelect.getCode()}`});
    this.formList.setContent(list);
    this.formList.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 弹窗。
    ////////////////////////////////////////////////////////////////////////////
    this.popupWindow.setContent(this.formList.getCode());
    this.popupWindow.generateCode();
  }

  /**
   * 初始化事件
   */
  initEvent() {
    ////////////////////////////////////////////////////////////////////////////
    // 初始化弹窗事件。
    ////////////////////////////////////////////////////////////////////////////
    this.popupWindow.initEvent();
  }

  /**
   * 获取代码
   */
  getCode() {
    ////////////////////////////////////////////////////////////////////////////
    // 由于当前对象基于PopupWindow，所有的内容都放在了popupWindow里面
    // 所以应该返回popupWindow的代码。
    ////////////////////////////////////////////////////////////////////////////
    return this.popupWindow.getCode();
  }

  /**
   * 显示弹窗
   */
  show() {
    ////////////////////////////////////////////////////////////////////////////
    // 显示弹窗。
    ////////////////////////////////////////////////////////////////////////////
    this.popupWindow.show();
    ////////////////////////////////////////////////////////////////////////////
    // 设置焦点在名称输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.getObject().focus();
  }

  /**
   * 隐藏弹窗
   */
  hide() {
    ////////////////////////////////////////////////////////////////////////////
    // 隐藏弹窗。
    ////////////////////////////////////////////////////////////////////////////
    this.popupWindow.hide();
  }

  /**
   * 弹窗隐藏回调方法
   *
   * @param source 调用源
   */
  popupWindowHideCallback(source) {
    ////////////////////////////////////////////////////////////////////////////
    // 隐藏结果信息。
    ////////////////////////////////////////////////////////////////////////////
    source.formList.hideResultInfo();
    ////////////////////////////////////////////////////////////////////////////
    // 隐藏所有提示。
    ////////////////////////////////////////////////////////////////////////////
    source.formList.hideAllPrompt();
    ////////////////////////////////////////////////////////////////////////////
    // 重置控件。
    ////////////////////////////////////////////////////////////////////////////
    source.resetControl();
  }

  /**
   * 冻结控件
   *
   * @param name 冻结标记名称
   */
  frozenControl(name) {
    ////////////////////////////////////////////////////////////////////////////
    // 存入队列。
    ////////////////////////////////////////////////////////////////////////////
    this.queue.push(name);
    this.levelOneSelect.getObject().attr("disabled", "disabled");
    this.levelTwoSelect.getObject().attr("disabled", "disabled");
    this.levelThreeSelect.getObject().attr("disabled", "disabled");
    this.levelFourSelect.getObject().attr("disabled", "disabled");
    this.nameTextField.getObject().attr("disabled", "disabled");
    this.confidenceTextField.getObject().attr("disabled", "disabled");
    this.intervalTextField.getObject().attr("disabled", "disabled");
    this.warnToleranceTextField.getObject().attr("disabled", "disabled");
    this.problemToleranceTextField.getObject().attr("disabled", "disabled");
    this.observationTextField.getObject().attr("disabled", "disabled");
    this.holidayStatusSelect.getObject().attr("disabled", "disabled");
    this.timeRangeTextField.getObject().attr("disabled", "disabled");
    this.statusSelect.getObject().attr("disabled", "disabled");
    this.formList.confirmButton.getObject().attr("disabled", "disabled");
    this.formList.cancelButton.getObject().attr("disabled", "disabled");
    this.popupWindow.removeEvent();
  }

  /**
   * 恢复控件
   *
   * @param name 恢复标记名称
   */
  recoverControl(name) {
    ////////////////////////////////////////////////////////////////////////////
    // 队列取出。
    ////////////////////////////////////////////////////////////////////////////
    this.queue.pop(name);
    if (this.queue.isEmpty()) {
      //////////////////////////////////////////////////////////////////////////
      // 如果取出了队列中所有的元素才能恢复。
      //////////////////////////////////////////////////////////////////////////
      this.levelOneSelect.getObject().removeAttr("disabled");
      this.levelTwoSelect.getObject().removeAttr("disabled");
      this.levelThreeSelect.getObject().removeAttr("disabled");
      this.levelFourSelect.getObject().removeAttr("disabled");
      this.nameTextField.getObject().removeAttr("disabled");
      this.confidenceTextField.getObject().removeAttr("disabled");
      this.intervalTextField.getObject().removeAttr("disabled");
      this.warnToleranceTextField.getObject().removeAttr("disabled");
      this.problemToleranceTextField.getObject().removeAttr("disabled");
      this.observationTextField.getObject().removeAttr("disabled");
      this.holidayStatusSelect.getObject().removeAttr("disabled");
      this.timeRangeTextField.getObject().removeAttr("disabled");
      this.statusSelect.getObject().removeAttr("disabled");
      this.formList.confirmButton.getObject().removeAttr("disabled");
      this.formList.cancelButton.getObject().removeAttr("disabled");
      this.popupWindow.recoverEvent();
    }
  }

  /**
   * 重置控件
   */
  resetControl() {
    ////////////////////////////////////////////////////////////////////////////
    // 重置的目的是为了下次输入的方便，对于下拉框来讲不是清空其内容，而是应该重
    // 置默认选项。由于二级下拉框跟随一级下拉框联动，三级下拉框跟随二级下拉框联
    // 动，四级下拉框跟随三级下拉框联动，所以这里不对除一级以外的下拉框做重置设
    // 置。
    ////////////////////////////////////////////////////////////////////////////
    this.uuidTextField.getObject().val("");
    this.levelOneSelect.getObject().find("option:eq(0)").prop("selected", true);
    this.levelOneSelect.getObject().trigger("change");
    this.nameTextField.getObject().val("");
    this.confidenceTextField.getObject().val("");
    this.intervalTextField.getObject().val("");
    this.warnToleranceTextField.getObject().val("");
    this.problemToleranceTextField.getObject().val("");
    this.observationTextField.getObject().val("");
    this.holidayStatusSelect.getObject().find("option:eq(0)").prop("selected", true);
    this.timeRangeTextField.getObject().val("");
    this.statusSelect.getObject().find("option:eq(0)").prop("selected", true);
  }
}
