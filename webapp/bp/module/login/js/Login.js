"use strict";

class Login {
  /**
   * 构造函数
   */
  constructor(ruleArray) {
    ////////////////////////////////////////////////////////////////////////////
    // 账户登录规则。
    ////////////////////////////////////////////////////////////////////////////
    this.adminLogonRule = ruleArray[0];
    ////////////////////////////////////////////////////////////////////////////
    // 提示显示的时间。
    ////////////////////////////////////////////////////////////////////////////
    this.promptShowTime = 1500;
  }

  /**
   * 生成代码
   */
  generateCode() {
    ////////////////////////////////////////////////////////////////////////////
    // 容器。
    ////////////////////////////////////////////////////////////////////////////
    this.container = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // mask。
    ////////////////////////////////////////////////////////////////////////////
    this.mask = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 登陆区域。
    ////////////////////////////////////////////////////////////////////////////
    this.loginArea = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // logo图片。
    ////////////////////////////////////////////////////////////////////////////
    this.logoImg = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // logo文本。
    ////////////////////////////////////////////////////////////////////////////
    this.logoText = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 名称标签。
    ////////////////////////////////////////////////////////////////////////////
    this.nameLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 名称输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 密码标签。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordLabel = new JSControl("label");
    ////////////////////////////////////////////////////////////////////////////
    // 密码输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordTextField = new JSControl("input");
    ////////////////////////////////////////////////////////////////////////////
    // 登陆按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.loginButton = new JSControl("button");
    ////////////////////////////////////////////////////////////////////////////
    // 版权。
    ////////////////////////////////////////////////////////////////////////////
    this.copyright = new Copyright();
    ////////////////////////////////////////////////////////////////////////////
    // 提示。
    ////////////////////////////////////////////////////////////////////////////
    this.prompt = new Prompt();
    ////////////////////////////////////////////////////////////////////////////
    // 等待遮蔽。
    ////////////////////////////////////////////////////////////////////////////
    this.waitMask = new WaitMask();
    ////////////////////////////////////////////////////////////////////////////
    // 容器。
    ////////////////////////////////////////////////////////////////////////////
    this.container.setAttribute(
      {
        "class": "container"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // mask。
    ////////////////////////////////////////////////////////////////////////////
    this.mask.setAttribute(
      {
        "class": "mask"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 登陆区域。
    ////////////////////////////////////////////////////////////////////////////
    this.loginArea.setAttribute(
      {
        "class": "login_area"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // logo图片。
    ////////////////////////////////////////////////////////////////////////////
    this.logoImg.setAttribute(
      {
        "class": "logo_img"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // logo文本。
    ////////////////////////////////////////////////////////////////////////////
    this.logoText.setAttribute(
      {
        "class": "logo_text"
      }
    );
    this.logoText.setContent("BlackPearl");
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.setAttribute(
      {
        "class": "control_area"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 用户名标签。
    ////////////////////////////////////////////////////////////////////////////
    this.nameLabel.setAttribute(
      {
        "class": "global_label",
        "style": "margin-right: 1rem; margin-left: 1.5rem;"
      }
    );
    this.nameLabel.setContent("用户名");
    ////////////////////////////////////////////////////////////////////////////
    // 用户名输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.setAttribute(
      {
        "type": "text",
        "class": "global_input",
        "placeholder": "输入用户名",
        "style": "width: 15rem; margin-right: 1.5rem;",
        "value": "jack"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 密码标签。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordLabel.setAttribute(
      {
        "class": "global_label",
        "style": "margin-right: 1rem;"
      }
    );
    this.passwordLabel.setContent("密码");
    ////////////////////////////////////////////////////////////////////////////
    // 密码输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordTextField.setAttribute(
      {
        "type": "password",
        "class": "global_input",
        "placeholder": "输入密码",
        "style": "width: 15rem; margin-right: 1.5rem;",
        "value": "123"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 登陆按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.loginButton.setAttribute(
      {
        "class": "global_button_primary",
        "style": "width: 9rem; margin-right: 1.5rem;"
      }
    );
    this.loginButton.setContent("登录");
    ////////////////////////////////////////////////////////////////////////////
    // 版权。
    ////////////////////////////////////////////////////////////////////////////
    this.copyright.setAttribute(
      {
        "class": "global_copyright"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 提示。
    ////////////////////////////////////////////////////////////////////////////
    this.prompt.setAttribute(
      {
        "class": "global_prompt",
        "style": "border-top-left-radius: 0rem; border-top-right-radius: 0rem;"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 等待遮蔽。
    ////////////////////////////////////////////////////////////////////////////
    this.waitMask.setAttribute(
      {
        "class": "global_wait_mask"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 容器。
    ////////////////////////////////////////////////////////////////////////////
    this.container.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // mask。
    ////////////////////////////////////////////////////////////////////////////
    this.mask.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 登陆区域。
    ////////////////////////////////////////////////////////////////////////////
    this.loginArea.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // logo图片。
    ////////////////////////////////////////////////////////////////////////////
    this.logoImg.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // logo文本。
    ////////////////////////////////////////////////////////////////////////////
    this.logoText.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 用户名标签。
    ////////////////////////////////////////////////////////////////////////////
    this.nameLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 用户名输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 密码标签。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordLabel.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 密码输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordTextField.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 登陆按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.loginButton.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 版权。
    ////////////////////////////////////////////////////////////////////////////
    this.copyright.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 提示。
    ////////////////////////////////////////////////////////////////////////////
    this.prompt.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 等待遮蔽。
    ////////////////////////////////////////////////////////////////////////////
    this.waitMask.generateCode();
  }

  /**
   * 初始化视图
   */
  initView() {
    ////////////////////////////////////////////////////////////////////////////
    // 页面添加容器。
    ////////////////////////////////////////////////////////////////////////////
    $("body").html(this.container.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加mask。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.mask.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加登陆区域。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.loginArea.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 登陆区域添加logo图片。
    ////////////////////////////////////////////////////////////////////////////
    this.loginArea.getObject().append(this.logoImg.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 登陆区域添加logo文本。
    ////////////////////////////////////////////////////////////////////////////
    this.loginArea.getObject().append(this.logoText.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 登陆区域添加控件区域。
    ////////////////////////////////////////////////////////////////////////////
    this.loginArea.getObject().append(this.controlArea.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域添加名称标签。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.getObject().append(this.nameLabel.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域添加名称输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.getObject().append(this.nameTextField.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域添加密码标签。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.getObject().append(this.passwordLabel.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域添加密码输入框。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.getObject().append(this.passwordTextField.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 控件区域添加登陆按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.controlArea.getObject().append(this.loginButton.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加版权。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.copyright.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加提示。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.prompt.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加等待遮蔽。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.waitMask.getCode());
  }

  /**
   * 初始化布局
   */
  initLayout() {
    ////////////////////////////////////////////////////////////////////////////
    // 页面排版。
    ////////////////////////////////////////////////////////////////////////////
    const containerWidth = Toolkit.getDomElementRect(this.container.getObject().get(0)).width;
    const containerHeight = Toolkit.getDomElementRect(this.container.getObject().get(0)).height;
    const loginAreaHeight = Toolkit.getDomElementRect(this.loginArea.getObject().get(0)).height;
    const loginAreaTop = (containerHeight - loginAreaHeight) / 2;
    this.loginArea.getObject().css("top", loginAreaTop + "px");
    const loginAreaContentWidth = Toolkit.getDomElementRect(this.logoImg.getObject().get(0)).width + Toolkit.getDomElementRect(this.logoText.getObject().get(0)).width + Toolkit.getDomElementRect(this.controlArea.getObject().get(0)).width;
    const loginAreaPaddingLeft = (containerWidth - loginAreaContentWidth) / 2;
    this.loginArea.getObject().css("padding-left", loginAreaPaddingLeft + "px");
    ////////////////////////////////////////////////////////////////////////////
    // 设置提示的宽度和绝对位置。
    ////////////////////////////////////////////////////////////////////////////
    const controlAreaWidth = Toolkit.getDomElementRect(this.controlArea.getObject().get(0)).width;
    const controlAreaHeight = Toolkit.getDomElementRect(this.controlArea.getObject().get(0)).height;
    this.prompt.getObject().css("width", controlAreaWidth + "px");
    this.prompt.getObject().css("top", this.loginArea.getObject().offset().top + loginAreaHeight + "px");
    this.prompt.getObject().css("left", this.controlArea.getObject().offset().left + "px");
  }

  /**
   * 初始化事件
   */
  initEvent() {
    ////////////////////////////////////////////////////////////////////////////
    // 本地对象。
    ////////////////////////////////////////////////////////////////////////////
    const thisObj = this;
    ////////////////////////////////////////////////////////////////////////////
    // 监听窗口尺寸变化调整页面布局。
    ////////////////////////////////////////////////////////////////////////////
    $(window).resize(function() {
      thisObj.initLayout();
    });
    ////////////////////////////////////////////////////////////////////////////
    // 注册密码输入框的keyup事件。
    ////////////////////////////////////////////////////////////////////////////
    this.passwordTextField.getObject().off("keyup").on("keyup", null, this, this.passwordTextFieldKeyupEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 注册登录按钮的click事件。
    ////////////////////////////////////////////////////////////////////////////
    this.loginButton.getObject().off("click").on("click", null, this, this.loginButtonClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 设置页面初始化焦点。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.getObject().focus();
  }

  /**
   * 密码输入框的keyup事件
   * @param event 事件对象
   */
  passwordTextFieldKeyupEvent(event) {
    ////////////////////////////////////////////////////////////////////////////
    // 获取调用源。
    ////////////////////////////////////////////////////////////////////////////
    const source = event.data;
    ////////////////////////////////////////////////////////////////////////////
    // 判断是否点击了Enter键。
    ////////////////////////////////////////////////////////////////////////////
    if (13 == event.keyCode) {
      source.loginButton.getObject().trigger("click");
    }
  }

  /**
   * 登录按钮的click事件
   * @param event 事件对象
   */
  loginButtonClickEvent(event) {
    ////////////////////////////////////////////////////////////////////////////
    // 获取调用源。
    ////////////////////////////////////////////////////////////////////////////
    const source = event.data;
    ////////////////////////////////////////////////////////////////////////////
    // 获取用户名和密码。
    ////////////////////////////////////////////////////////////////////////////
    const name = source.nameTextField.getObject().val();
    const password = source.passwordTextField.getObject().val();
    ////////////////////////////////////////////////////////////////////////////
    // 检查参数。
    ////////////////////////////////////////////////////////////////////////////
    if (!(Module.checkParameter(source.adminLogonRule, "adminLogon", {"name": "name", "value": name, "id": "0", "allow_null": false}, source, function error(source, errorMessage) {
      source.prompt.show("error", errorMessage.replace(/账户名称/g, "用户名"), source.promptShowTime);
    }) && Module.checkParameter(source.adminLogonRule, "adminLogon", {"name": "password", "value": password, "id": "0", "allow_null": false}, source, function error(source, errorMessage) {
      source.prompt.show("error", errorMessage, source.promptShowTime);
    }))) {
      return;
    }
    ////////////////////////////////////////////////////////////////////////////
    // 管理员登录。
    ////////////////////////////////////////////////////////////////////////////
    Network.request(Network.RequestType.GET, Network.ResponseType.JSON, [{"Content-Type": "application/x-www-form-urlencoded"}],
      Configure.getServerUrl() + `/module/supervision.spot.AdminInfo/adminLogon?name=${name}&password=${password}`, null, source,
      function loadStart(xhr, xhrEvent, source) {
        source.prompt.hide(); // 隐藏提示。
        source.frozenControl(); // 冻结控件。
        source.waitMask.show(); // 显示等待遮蔽。
      },
      function error(xhr, xhrEvent, source) {
        source.prompt.show("error", "网络请求失败", source.promptShowTime);
      },
      function timeout(xhr, xhrEvent, source) {
        source.prompt.show("error", "网络请求超时", source.promptShowTime);
      },
      function readyStateChange(xhr, xhrEvent, source) {
        if ((XMLHttpRequest.DONE == xhr.readyState) && (200 == xhr.status)) {
          source.recoverControl(); // 恢复控件。
          source.waitMask.hide(); // 隐藏等待遮蔽。
          //////////////////////////////////////////////////////////////////////
          // 响应结果。
          //////////////////////////////////////////////////////////////////////
          const responseResult = xhr.response;
          if (Toolkit.stringEqualsIgnoreCase("SUCCESS", responseResult.status)) {
            ////////////////////////////////////////////////////////////////////
            // 存储用户信息。
            ////////////////////////////////////////////////////////////////////
            const account = responseResult.content;
            AccountSecurity.setItem("account_name", account.name);
            if (Toolkit.isJSONObjectExistKey(account, "menus")) {
              AccountSecurity.setItem("account_menus", JSON.parse(account.menus));
            }
            AccountSecurity.setItem("account_token", account.token);
            ////////////////////////////////////////////////////////////////////
            // 刷新管理员Token
            ////////////////////////////////////////////////////////////////////
            AccountSecurity.refreshAdminToken(function() {
              //////////////////////////////////////////////////////////////////
              // 刷新成功后跳转首页。
              //////////////////////////////////////////////////////////////////
              window.location.href = "../home/home.html";
            });
          } else {
            source.prompt.show("error", responseResult.attach, source.promptShowTime);
          }
        }
      }
    );
  }

  /**
   * 冻结控件
   */
  frozenControl() {
    ////////////////////////////////////////////////////////////////////////////
    // 用户名输入框、密码输入框、登陆按钮不可用。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.getObject().attr("disabled", "disabled");
    this.passwordTextField.getObject().attr("disabled", "disabled");
    this.loginButton.getObject().attr("disabled", "disabled");
  }

  /**
   * 恢复控件
   */
  recoverControl() {
    ////////////////////////////////////////////////////////////////////////////
    // 还原用户名输入框、密码输入框、登陆按钮状态。
    ////////////////////////////////////////////////////////////////////////////
    this.nameTextField.getObject().removeAttr("disabled");
    this.passwordTextField.getObject().removeAttr("disabled");
    this.loginButton.getObject().removeAttr("disabled");
  }
}
