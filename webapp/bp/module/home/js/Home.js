"use strict";

class Home {
  /**
   * 构造函数
   */
  constructor() {
    ////////////////////////////////////////////////////////////////////////////
    // 检查登录状态。
    ////////////////////////////////////////////////////////////////////////////
    AccountSecurity.checkLogonStatus();
    ////////////////////////////////////////////////////////////////////////////
    // 刷新Token。
    ////////////////////////////////////////////////////////////////////////////
    AccountSecurity.refreshToken();
    ////////////////////////////////////////////////////////////////////////////
    // 获取账户菜单数据。
    ////////////////////////////////////////////////////////////////////////////
    const accountMenus = AccountSecurity.getItem("account_menus");
    if ((null != accountMenus) && (0 < accountMenus.length)) {
      this.menuArray = accountMenus;
    } else {
      this.menuArray = new Array();
    }
    ////////////////////////////////////////////////////////////////////////////
    // 二级菜单淡入时间。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoMenuFadeIn = 300;
    ////////////////////////////////////////////////////////////////////////////
    // 二级菜单淡出时间。
    ////////////////////////////////////////////////////////////////////////////
    this.levelTwoMenuFadeOut = 300;
  }

  /**
   * 生成代码
   */
  generateCode() {
    ////////////////////////////////////////////////////////////////////////////
    // 容器。
    ////////////////////////////////////////////////////////////////////////////
    this.container = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 顶部栏。
    ////////////////////////////////////////////////////////////////////////////
    this.topbar = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 菜单头。
    ////////////////////////////////////////////////////////////////////////////
    this.menuHead = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 菜单按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.menuButton = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 系统名称。
    ////////////////////////////////////////////////////////////////////////////
    this.systemName = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 导航栏。
    ////////////////////////////////////////////////////////////////////////////
    this.navbar = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 快捷区域。
    ////////////////////////////////////////////////////////////////////////////
    this.shortcutArea = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 侧边栏。
    ////////////////////////////////////////////////////////////////////////////
    this.sidebar = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 内容。
    ////////////////////////////////////////////////////////////////////////////
    this.content = new JSControl("div");
    ////////////////////////////////////////////////////////////////////////////
    // 容器。
    ////////////////////////////////////////////////////////////////////////////
    this.container.setAttribute(
      {
        "class": "container"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 顶部栏。
    ////////////////////////////////////////////////////////////////////////////
    this.topbar.setAttribute(
      {
        "class": "top_bar"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 菜单头。
    ////////////////////////////////////////////////////////////////////////////
    this.menuHead.setAttribute(
      {
        "class": "menu_head"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 菜单按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.menuButton.setAttribute(
      {
        "class": "menu_button"
      }
    );
    this.menuButton.setContent("<img />");
    ////////////////////////////////////////////////////////////////////////////
    // 系统名称。
    ////////////////////////////////////////////////////////////////////////////
    this.systemName.setAttribute(
      {
        "class": "system_name"
      }
    );
    this.systemName.setContent("BlackPearl");
    ////////////////////////////////////////////////////////////////////////////
    // 导航栏。
    ////////////////////////////////////////////////////////////////////////////
    this.navbar.setAttribute(
      {
        "class": "nav_bar"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 快捷区域。
    ////////////////////////////////////////////////////////////////////////////
    this.shortcutArea.setAttribute(
      {
        "class": "shortcut_area"
      }
    );
    this.shortcutArea.setContent(`
      <div class = "menu_level_one" style = "height: 100%; float: left;">${AccountSecurity.getItem("account_name")}</div>
      <div class = "menu_level_one" style = "height: 100%; float: left;">退出</div>
    `);
    ////////////////////////////////////////////////////////////////////////////
    // 侧边栏。
    ////////////////////////////////////////////////////////////////////////////
    this.sidebar.setAttribute(
      {
        "class": "side_bar global_scroll global_scroll_dark"
      }
    );
    ////////////////////////////////////////////////////////////////////////////
    // 内容。
    ////////////////////////////////////////////////////////////////////////////
    this.content.setAttribute(
      {
        "class": "content"
      }
    );
    this.content.setContent(`<iframe scrolling = "no"></iframe>`);
    ////////////////////////////////////////////////////////////////////////////
    // 容器。
    ////////////////////////////////////////////////////////////////////////////
    this.container.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 顶部栏。
    ////////////////////////////////////////////////////////////////////////////
    this.topbar.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 菜单头。
    ////////////////////////////////////////////////////////////////////////////
    this.menuHead.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 菜单按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.menuButton.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 系统名称。
    ////////////////////////////////////////////////////////////////////////////
    this.systemName.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 导航栏。
    ////////////////////////////////////////////////////////////////////////////
    this.navbar.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 快捷区域。
    ////////////////////////////////////////////////////////////////////////////
    this.shortcutArea.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 侧边栏。
    ////////////////////////////////////////////////////////////////////////////
    this.sidebar.generateCode();
    ////////////////////////////////////////////////////////////////////////////
    // 内容。
    ////////////////////////////////////////////////////////////////////////////
    this.content.generateCode();
  }

  /**
   * 初始化视图
   */
  initView() {
    ////////////////////////////////////////////////////////////////////////////
    // 页面添加容器。
    ////////////////////////////////////////////////////////////////////////////
    $("body").html(this.container.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加顶部栏。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.topbar.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 顶部栏添加菜单头。
    ////////////////////////////////////////////////////////////////////////////
    this.topbar.getObject().append(this.menuHead.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 菜单头添加菜单按钮。
    ////////////////////////////////////////////////////////////////////////////
    this.menuHead.getObject().append(this.menuButton.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 菜单头添加系统名称。
    ////////////////////////////////////////////////////////////////////////////
    this.menuHead.getObject().append(this.systemName.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 顶部栏添加导航栏。
    ////////////////////////////////////////////////////////////////////////////
    this.topbar.getObject().append(this.navbar.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 顶部栏添加快捷区域。
    ////////////////////////////////////////////////////////////////////////////
    this.topbar.getObject().append(this.shortcutArea.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加侧边栏。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.sidebar.getCode());
    ////////////////////////////////////////////////////////////////////////////
    // 容器添加内容。
    ////////////////////////////////////////////////////////////////////////////
    this.container.getObject().append(this.content.getCode());
  }

  /**
   * 初始化布局
   */
  initLayout() {
    ////////////////////////////////////////////////////////////////////////////
    // 根据布局计算侧边栏的布局。基于定位计算的单位可以是px。
    ////////////////////////////////////////////////////////////////////////////
    const containerHeight = Toolkit.getDomElementRect(this.container.getObject().get(0)).height;
    const topBarHeight = Toolkit.getDomElementRect(this.topbar.getObject().get(0)).height;
    const sideBarHeight = containerHeight - topBarHeight;
    this.sidebar.getObject().css("height", sideBarHeight + "px");
  }

  /**
   * 初始化数据
   */
  initData() {
    ////////////////////////////////////////////////////////////////////////////
    // 一级菜单数组。
    ////////////////////////////////////////////////////////////////////////////
    const levelOneMenuArray = new Array();
    ////////////////////////////////////////////////////////////////////////////
    // 抽取一级菜单数据。
    ////////////////////////////////////////////////////////////////////////////
    for (let i = 0; i < this.menuArray.length; i++) {
      const menu = this.menuArray[i];
      if (1 == menu.level) {
        levelOneMenuArray.push(menu);
      }
    }
    ////////////////////////////////////////////////////////////////////////////
    // 排序一级菜单数组。
    ////////////////////////////////////////////////////////////////////////////
    levelOneMenuArray.sort(function(a, b) {
      return a.order - b.order;
    });
    ////////////////////////////////////////////////////////////////////////////
    // 添加一级菜单数组。
    ////////////////////////////////////////////////////////////////////////////
    for (let i = 0; i < levelOneMenuArray.length; i++) {
      const m = levelOneMenuArray[i];
      const code = `
        <div class = "menu_level_one" style = "float: left;" data-parent_uuid = "${m.parent_uuid}" data-uuid = "${m.uuid}" data-name = "${m.name}" data-description = "${m.description}" data-text = "${m.text}">${m.text}</div>
      `;
      this.navbar.getObject().append(code);
    }
    ////////////////////////////////////////////////////////////////////////////
    // 设置账户名至导航栏。
    ////////////////////////////////////////////////////////////////////////////
    this.shortcutArea.getObject().find(".menu_level_one:first").html(AccountSecurity.getItem("account_name"));
    ////////////////////////////////////////////////////////////////////////////
    // 注册快捷区域账户信息的click事件。
    ////////////////////////////////////////////////////////////////////////////
    this.shortcutArea.getObject().find(".menu_level_one:eq(0)").off("click").on("click", null, this, this.shortcutAreaAccountInformationClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 注册快捷区域退出的click事件。
    ////////////////////////////////////////////////////////////////////////////
    this.shortcutArea.getObject().find(".menu_level_one:eq(1)").off("click").on("click", null, this, this.shortcutAreaExitClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 调整内容布局。
    ////////////////////////////////////////////////////////////////////////////
    this.resizeContentLayout();
  }

  /**
   * 初始化事件
   */
  initEvent() {
    ////////////////////////////////////////////////////////////////////////////
    // 本地对象。
    ////////////////////////////////////////////////////////////////////////////
    const thisObj = this;
    ////////////////////////////////////////////////////////////////////////////
    // 监听窗口尺寸变化调整页面布局。
    ////////////////////////////////////////////////////////////////////////////
    $(window).resize(function() {
      thisObj.initLayout();
      thisObj.resizeContentLayout();
    });
    ////////////////////////////////////////////////////////////////////////////
    // 注册菜单按钮的click事件。
    ////////////////////////////////////////////////////////////////////////////
    this.menuButton.getObject().off("click").on("click", null, this, this.menuButtonClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 注册一级菜单的click事件。
    ////////////////////////////////////////////////////////////////////////////
    this.navbar.getObject().find(".menu_level_one").off("click").on("click", null, this, this.menuLevelOneClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 设置选中的菜单。
    ////////////////////////////////////////////////////////////////////////////
    this.setSelectedMenu();
  }

  /**
   * 菜单按钮click事件
   * @param event 事件对象
   */
  menuButtonClickEvent(event) {
    const source = event.data;
    ////////////////////////////////////////////////////////////////////////////
    // 这里增加了移除事件再添加事件的操作，是为了避免频繁点击按钮造成的排版错乱
    // 的情况。基于定位计算的单位可以是px。
    ////////////////////////////////////////////////////////////////////////////
    source.menuButton.getObject().off("click");
    if (parseInt(source.sidebar.getObject().css("left")) >= 0) {
      source.sidebar.getObject().animate({left: (Toolkit.getDomElementRect(source.sidebar.getObject().get(0)).width * -1) + "px"}, function() {
        source.content.getObject().animate({left: "0px"}, function() {
          source.content.getObject().animate({width: Toolkit.getDomElementRect(source.content.getObject().get(0)).width + Toolkit.getDomElementRect(source.sidebar.getObject().get(0)).width + "px"}, function() {
            source.menuButton.getObject().off("click").on("click", null, source, source.menuButtonClickEvent);
            ////////////////////////////////////////////////////////////////////
            // 刷新iframe。
            ////////////////////////////////////////////////////////////////////
            source.content.getObject().find("iframe").attr("src", source.content.getObject().find("iframe").attr("src"));
          });
        });
      });
    } else {
      source.content.getObject().animate({width: Toolkit.getDomElementRect(source.content.getObject().get(0)).width - Toolkit.getDomElementRect(source.sidebar.getObject().get(0)).width + "px"}, function() {
        source.content.getObject().animate({left: Toolkit.getDomElementRect(source.sidebar.getObject().get(0)).width + "px"}, function() {
          source.sidebar.getObject().animate({left: "0px"}, function() {
            source.menuButton.getObject().off("click").on("click", null, source, source.menuButtonClickEvent);
            ////////////////////////////////////////////////////////////////////
            // 刷新iframe。
            ////////////////////////////////////////////////////////////////////
            source.content.getObject().find("iframe").attr("src", source.content.getObject().find("iframe").attr("src"));
          });
        });
      });
    }
  }

  /**
   * 一级菜单click事件
   * @param event 事件对象
   */
  menuLevelOneClickEvent(event) {
    const source = event.data;
    ////////////////////////////////////////////////////////////////////////////
    // 设置一级菜单选中项。
    ////////////////////////////////////////////////////////////////////////////
    AccountSecurity.setItem("level_one_menu_selected_uuid", $(this).attr("data-uuid"));
    ////////////////////////////////////////////////////////////////////////////
    // 修改点击样式。
    ////////////////////////////////////////////////////////////////////////////
    $(this).parent().children(".menu_level_one").removeClass("menu_level_one_active");
    $(this).addClass("menu_level_one_active");
    ////////////////////////////////////////////////////////////////////////////
    // 清空侧边栏内容。
    ////////////////////////////////////////////////////////////////////////////
    source.sidebar.getObject().html("");
    const uuid = $(this).attr("data-uuid");
    const levelTwoMenuArray = new Array();
    ////////////////////////////////////////////////////////////////////////////
    // 抽取二级菜单数组。
    ////////////////////////////////////////////////////////////////////////////
    for (let i = 0; i < source.menuArray.length; i++) {
      if (uuid == source.menuArray[i].parent_uuid) {
        levelTwoMenuArray.push(source.menuArray[i]);
      }
    }
    ////////////////////////////////////////////////////////////////////////////
    // 排序二级菜单数组。
    ////////////////////////////////////////////////////////////////////////////
    levelTwoMenuArray.sort(function(a, b) {
      return a.order - b.order;
    });
    const sideBarMenu = new Array();
    ////////////////////////////////////////////////////////////////////////////
    // 遍历二级菜单寻找三级菜单。
    ////////////////////////////////////////////////////////////////////////////
    for (let i = 0; i < levelTwoMenuArray.length; i++) {
      const mLv2 = levelTwoMenuArray[i];
      sideBarMenu.push(mLv2);
      const levelThreeMenuArray = new Array();
      for (let j = 0; j < source.menuArray.length; j++) {
        if (mLv2.uuid == source.menuArray[j].parent_uuid) {
          levelThreeMenuArray.push(source.menuArray[j]);
        }
      }
      //////////////////////////////////////////////////////////////////////////
      // 排序三级菜单数组。
      //////////////////////////////////////////////////////////////////////////
      levelThreeMenuArray.sort(function(a, b) {
        return a.order - b.order;
      });
      for (let j = 0; j < levelThreeMenuArray.length; j++) {
        sideBarMenu.push(levelThreeMenuArray[j]);
      }
    }
    ////////////////////////////////////////////////////////////////////////////
    // 添加二级菜单和三级菜单数组。
    ////////////////////////////////////////////////////////////////////////////
    for (let i = 0; i < sideBarMenu.length; i++) {
      let code = "";
      if (null == sideBarMenu[i].link) {
        code = `
          <div class = "menu_level_two menu_level_two_open" data-parent_uuid = "${sideBarMenu[i].parent_uuid}" data-uuid = "${sideBarMenu[i].uuid}" data-name = "${sideBarMenu[i].name}" data-description = "${sideBarMenu[i].description}" data-text = "${sideBarMenu[i].text}">
            <div class = "menu_img"></div>
            <div class = "menu_text">${sideBarMenu[i].text}</div>
          </div>
        `;
      } else {
        code = `
          <div class = "menu_level_three" data-parent_uuid = "${sideBarMenu[i].parent_uuid}" data-uuid = "${sideBarMenu[i].uuid}" data-name = "${sideBarMenu[i].name}" data-description = "${sideBarMenu[i].description}" data-text = "${sideBarMenu[i].text}" data-link = "${sideBarMenu[i].link}">
            <div class = "menu_img"></div>
            <div class = "menu_text">${sideBarMenu[i].text}</div>
          </div>
        `;
      }
      source.sidebar.getObject().append(code);
    }
    ////////////////////////////////////////////////////////////////////////////
    // 注册二级菜单的click事件。
    ////////////////////////////////////////////////////////////////////////////
    source.sidebar.getObject().find(".menu_level_two").off("click").on("click", null, source, source.menuLevelTwoClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 注册三级菜单的click事件。
    ////////////////////////////////////////////////////////////////////////////
    source.sidebar.getObject().find(".menu_level_three").off("click").on("click", null, source, source.menuLevelThreeClickEvent);
    ////////////////////////////////////////////////////////////////////////////
    // 调整内容布局。
    ////////////////////////////////////////////////////////////////////////////
    source.resizeContentLayout();
    ////////////////////////////////////////////////////////////////////////////
    // 触发侧边栏加载完成事件。
    ////////////////////////////////////////////////////////////////////////////
    source.sidebar.getObject().trigger("loadCompleteEvent");
  }

  /**
   * 二级菜单click事件
   * @param event 事件对象
   */
  menuLevelTwoClickEvent(event) {
    const source = event.data;
    if ($(this).hasClass("menu_level_two_open")) {
      $(this).removeClass("menu_level_two_open");
      $(this).addClass("menu_level_two_close");
      const uuid = $(this).attr("data-uuid");
      source.sidebar.getObject().find(`.menu_level_three[data-parent_uuid="${uuid}"]`).fadeOut(source.levelTwoMenuFadeOut);
    } else {
      $(this).removeClass("menu_level_two_close");
      $(this).addClass("menu_level_two_open");
      const uuid = $(this).attr("data-uuid");
      source.sidebar.getObject().find(`.menu_level_three[data-parent_uuid="${uuid}"]`).fadeIn(source.levelTwoMenuFadeIn);
    }
  }

  /**
   * 三级菜单click事件
   * @param event 事件对象
   */
  menuLevelThreeClickEvent(event) {
    const source = event.data;
    ////////////////////////////////////////////////////////////////////////////
    // 三级菜单选中项。
    ////////////////////////////////////////////////////////////////////////////
    AccountSecurity.setItem("level_three_menu_selected_uuid", $(this).attr("data-uuid"));
    ////////////////////////////////////////////////////////////////////////////
    // 修改当前所属一级菜单的样式。
    ////////////////////////////////////////////////////////////////////////////
    const menuLevelTwoUuid = $(this).attr("data-parent_uuid");
    let menuLevelOneUuid = "";
    ////////////////////////////////////////////////////////////////////////////
    // 遍历获取当前二级菜单所属的一级菜单。
    ////////////////////////////////////////////////////////////////////////////
    for (let i = 0; i < source.menuArray.length; i++) {
      if (menuLevelTwoUuid == source.menuArray[i].uuid) {
        menuLevelOneUuid = source.menuArray[i].parent_uuid;
      }
    }
    source.navbar.getObject().find(`.menu_level_one[data-uuid="${menuLevelOneUuid}"]`).addClass("menu_level_one_active");
    ////////////////////////////////////////////////////////////////////////////
    // 修改三级菜单的样式。
    ////////////////////////////////////////////////////////////////////////////
    source.sidebar.getObject().children(".menu_level_three").removeClass("menu_level_three_active");
    $(this).addClass("menu_level_three_active");
    const text = $(this).attr("data-text");
    const link = $(this).attr("data-link");
    $("title").html(text);
    source.content.getObject().find("iframe").attr("src", link);
  }

  /**
   * 快捷区域账户信息click事件
   * @param event 事件对象
   */
  shortcutAreaAccountInformationClickEvent(event) {
    const source = event.data;
    ////////////////////////////////////////////////////////////////////////////
    // 移除导航栏和侧边栏菜单的选中状态。
    ////////////////////////////////////////////////////////////////////////////
    source.navbar.getObject().find(".menu_level_one_active").removeClass("menu_level_one_active");
    source.sidebar.getObject().find(".menu_level_three_active").removeClass("menu_level_three_active");
    ////////////////////////////////////////////////////////////////////////////
    // 设置标题。
    ////////////////////////////////////////////////////////////////////////////
    $("title").html("账户信息");
    source.content.getObject().find("iframe").attr("src", "../security_center/account_information.html");
  }

  /**
   * 快捷区域退出click事件
   * @param event 事件对象
   */
  shortcutAreaExitClickEvent(event) {
    ////////////////////////////////////////////////////////////////////////////
    // 登出。
    ////////////////////////////////////////////////////////////////////////////
    AccountSecurity.logoff();
  }

  /**
   * 调整内容布局
   */
  resizeContentLayout() {
    const top = Toolkit.getDomElementRect(this.topbar.getObject().get(0)).height;
    const left = Toolkit.getDomElementRect(this.sidebar.getObject().get(0)).width;
    const width = Toolkit.getDomElementRect(this.container.getObject().get(0)).width - Toolkit.getDomElementRect(this.sidebar.getObject().get(0)).width;
    const height = Toolkit.getDomElementRect(this.sidebar.getObject().get(0)).height;
    ////////////////////////////////////////////////////////////////////////////
    // 基于定位计算的单位可以是px。
    ////////////////////////////////////////////////////////////////////////////
    this.content.getObject().css("top", top + "px");
    this.content.getObject().css("left", left + "px");
    this.content.getObject().css("width", width + "px");
    this.content.getObject().css("height", height + "px");
  }

  /**
   * 设置选中的菜单
   */
  setSelectedMenu() {
    ////////////////////////////////////////////////////////////////////////////
    // 本地对象。
    ////////////////////////////////////////////////////////////////////////////
    const thisObj = this;
    ////////////////////////////////////////////////////////////////////////////
    // 从本地获取菜单选中记录。
    ////////////////////////////////////////////////////////////////////////////
    const levelOneMenuSelectedUuid = AccountSecurity.getItem("level_one_menu_selected_uuid");
    const levelThreeMenuSelectedUuid = AccountSecurity.getItem("level_three_menu_selected_uuid");
    ////////////////////////////////////////////////////////////////////////////
    // 一级菜单没有选中记录，默认选择第1个一级菜单和第1个二级菜单中的第1个三级菜
    // 单。
    ////////////////////////////////////////////////////////////////////////////
    if (null == levelOneMenuSelectedUuid) {
      //////////////////////////////////////////////////////////////////////////
      // 这里是前置而后触发。
      //////////////////////////////////////////////////////////////////////////
      this.sidebar.getObject().off("loadCompleteEvent").on("loadCompleteEvent", function() {
        ////////////////////////////////////////////////////////////////////////
        // 二级菜单和三级菜单是并列关系，可以直接由侧边栏找到第1个三级菜单。
        ////////////////////////////////////////////////////////////////////////
        thisObj.sidebar.getObject().find(".menu_level_three:first").trigger("click");
      });
      //////////////////////////////////////////////////////////////////////////
      // 模拟点击一级菜单用以加载二级菜单和三级菜单的数据。
      //////////////////////////////////////////////////////////////////////////
      this.navbar.getObject().find(".menu_level_one:first").trigger("click");
    } else {
      //////////////////////////////////////////////////////////////////////////
      // 模拟点击指定属性的一级菜单。
      //////////////////////////////////////////////////////////////////////////
      this.navbar.getObject().find(`.menu_level_one[data-uuid="${levelOneMenuSelectedUuid}"]`).trigger("click");
      if (null == levelThreeMenuSelectedUuid) {
        ////////////////////////////////////////////////////////////////////////
        // 如果三级菜单没有选中记录，默认选择第1个二级菜单中的第1个三级菜单。
        ////////////////////////////////////////////////////////////////////////
        this.sidebar.getObject().find(".menu_level_three:first").trigger("click");
      } else {
        this.sidebar.getObject().find(`.menu_level_three[data-uuid="${levelThreeMenuSelectedUuid}"]`).trigger("click");
      }
    }
  }
}
